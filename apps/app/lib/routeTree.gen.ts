/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './../routes/__root'
import { Route as TeamPlansRouteImport } from './../routes/team-plans'
import { Route as TaskManagementRouteImport } from './../routes/task-management'
import { Route as SurgicalPlanViewRouteImport } from './../routes/surgical-plan-view'
import { Route as PatientPoolRouteImport } from './../routes/patient-pool'
import { Route as OrganizationRouteImport } from './../routes/organization'
import { Route as MyPlansRouteImport } from './../routes/my-plans'
import { Route as LoginRouteImport } from './../routes/login'
import { Route as GenesisSettingsRouteImport } from './../routes/genesis-settings'
import { Route as CarePlansRouteImport } from './../routes/care-plans'
import { Route as CareExceptionsRouteImport } from './../routes/care-exceptions'
import { Route as AccountRouteImport } from './../routes/account'
import { Route as AboutRouteImport } from './../routes/about'
import { Route as IndexRouteImport } from './../routes/index'
import { Route as TaskManagementIndexRouteImport } from './../routes/task-management.index'
import { Route as TaskManagementCreateStep2RouteImport } from './../routes/task-management/create-step2'
import { Route as TaskManagementCreateRouteImport } from './../routes/task-management/create'
import { Route as TaskManagementTaskIdRouteImport } from './../routes/task-management.$taskId'
import { Route as PrdsSurgicalPlanRouteImport } from './../routes/prds.surgical-plan'
import { Route as PrdsSophiaPatientEngagementRouteImport } from './../routes/prds.sophia-patient-engagement'
import { Route as PrdsGenesisAgentRouteImport } from './../routes/prds.genesis-agent'
import { Route as GenesisFindingsMonthRouteImport } from './../routes/genesis-findings.$month'
import { Route as CareExceptionsIdRouteImport } from './../routes/care-exceptions/$id'
import { Route as AgentsQuantumAgentRouteImport } from './../routes/agents.quantum-agent'
import { Route as AgentsPatientEngagementRouteImport } from './../routes/agents.patient-engagement'
import { Route as AgentsGenesisAgentRouteImport } from './../routes/agents.genesis-agent'
import { Route as AgentsComplianceAgentRouteImport } from './../routes/agents.compliance-agent'

const TeamPlansRoute = TeamPlansRouteImport.update({
  id: '/team-plans',
  path: '/team-plans',
  getParentRoute: () => rootRouteImport,
} as any)
const TaskManagementRoute = TaskManagementRouteImport.update({
  id: '/task-management',
  path: '/task-management',
  getParentRoute: () => rootRouteImport,
} as any)
const SurgicalPlanViewRoute = SurgicalPlanViewRouteImport.update({
  id: '/surgical-plan-view',
  path: '/surgical-plan-view',
  getParentRoute: () => rootRouteImport,
} as any)
const PatientPoolRoute = PatientPoolRouteImport.update({
  id: '/patient-pool',
  path: '/patient-pool',
  getParentRoute: () => rootRouteImport,
} as any)
const OrganizationRoute = OrganizationRouteImport.update({
  id: '/organization',
  path: '/organization',
  getParentRoute: () => rootRouteImport,
} as any)
const MyPlansRoute = MyPlansRouteImport.update({
  id: '/my-plans',
  path: '/my-plans',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const GenesisSettingsRoute = GenesisSettingsRouteImport.update({
  id: '/genesis-settings',
  path: '/genesis-settings',
  getParentRoute: () => rootRouteImport,
} as any)
const CarePlansRoute = CarePlansRouteImport.update({
  id: '/care-plans',
  path: '/care-plans',
  getParentRoute: () => rootRouteImport,
} as any)
const CareExceptionsRoute = CareExceptionsRouteImport.update({
  id: '/care-exceptions',
  path: '/care-exceptions',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountRoute = AccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TaskManagementIndexRoute = TaskManagementIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TaskManagementRoute,
} as any)
const TaskManagementCreateStep2Route =
  TaskManagementCreateStep2RouteImport.update({
    id: '/create-step2',
    path: '/create-step2',
    getParentRoute: () => TaskManagementRoute,
  } as any)
const TaskManagementCreateRoute = TaskManagementCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => TaskManagementRoute,
} as any)
const TaskManagementTaskIdRoute = TaskManagementTaskIdRouteImport.update({
  id: '/$taskId',
  path: '/$taskId',
  getParentRoute: () => TaskManagementRoute,
} as any)
const PrdsSurgicalPlanRoute = PrdsSurgicalPlanRouteImport.update({
  id: '/prds/surgical-plan',
  path: '/prds/surgical-plan',
  getParentRoute: () => rootRouteImport,
} as any)
const PrdsSophiaPatientEngagementRoute =
  PrdsSophiaPatientEngagementRouteImport.update({
    id: '/prds/sophia-patient-engagement',
    path: '/prds/sophia-patient-engagement',
    getParentRoute: () => rootRouteImport,
  } as any)
const PrdsGenesisAgentRoute = PrdsGenesisAgentRouteImport.update({
  id: '/prds/genesis-agent',
  path: '/prds/genesis-agent',
  getParentRoute: () => rootRouteImport,
} as any)
const GenesisFindingsMonthRoute = GenesisFindingsMonthRouteImport.update({
  id: '/genesis-findings/$month',
  path: '/genesis-findings/$month',
  getParentRoute: () => rootRouteImport,
} as any)
const CareExceptionsIdRoute = CareExceptionsIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => CareExceptionsRoute,
} as any)
const AgentsQuantumAgentRoute = AgentsQuantumAgentRouteImport.update({
  id: '/agents/quantum-agent',
  path: '/agents/quantum-agent',
  getParentRoute: () => rootRouteImport,
} as any)
const AgentsPatientEngagementRoute = AgentsPatientEngagementRouteImport.update({
  id: '/agents/patient-engagement',
  path: '/agents/patient-engagement',
  getParentRoute: () => rootRouteImport,
} as any)
const AgentsGenesisAgentRoute = AgentsGenesisAgentRouteImport.update({
  id: '/agents/genesis-agent',
  path: '/agents/genesis-agent',
  getParentRoute: () => rootRouteImport,
} as any)
const AgentsComplianceAgentRoute = AgentsComplianceAgentRouteImport.update({
  id: '/agents/compliance-agent',
  path: '/agents/compliance-agent',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/account': typeof AccountRoute
  '/care-exceptions': typeof CareExceptionsRouteWithChildren
  '/care-plans': typeof CarePlansRoute
  '/genesis-settings': typeof GenesisSettingsRoute
  '/login': typeof LoginRoute
  '/my-plans': typeof MyPlansRoute
  '/organization': typeof OrganizationRoute
  '/patient-pool': typeof PatientPoolRoute
  '/surgical-plan-view': typeof SurgicalPlanViewRoute
  '/task-management': typeof TaskManagementRouteWithChildren
  '/team-plans': typeof TeamPlansRoute
  '/agents/compliance-agent': typeof AgentsComplianceAgentRoute
  '/agents/genesis-agent': typeof AgentsGenesisAgentRoute
  '/agents/patient-engagement': typeof AgentsPatientEngagementRoute
  '/agents/quantum-agent': typeof AgentsQuantumAgentRoute
  '/care-exceptions/$id': typeof CareExceptionsIdRoute
  '/genesis-findings/$month': typeof GenesisFindingsMonthRoute
  '/prds/genesis-agent': typeof PrdsGenesisAgentRoute
  '/prds/sophia-patient-engagement': typeof PrdsSophiaPatientEngagementRoute
  '/prds/surgical-plan': typeof PrdsSurgicalPlanRoute
  '/task-management/$taskId': typeof TaskManagementTaskIdRoute
  '/task-management/create': typeof TaskManagementCreateRoute
  '/task-management/create-step2': typeof TaskManagementCreateStep2Route
  '/task-management/': typeof TaskManagementIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/account': typeof AccountRoute
  '/care-exceptions': typeof CareExceptionsRouteWithChildren
  '/care-plans': typeof CarePlansRoute
  '/genesis-settings': typeof GenesisSettingsRoute
  '/login': typeof LoginRoute
  '/my-plans': typeof MyPlansRoute
  '/organization': typeof OrganizationRoute
  '/patient-pool': typeof PatientPoolRoute
  '/surgical-plan-view': typeof SurgicalPlanViewRoute
  '/team-plans': typeof TeamPlansRoute
  '/agents/compliance-agent': typeof AgentsComplianceAgentRoute
  '/agents/genesis-agent': typeof AgentsGenesisAgentRoute
  '/agents/patient-engagement': typeof AgentsPatientEngagementRoute
  '/agents/quantum-agent': typeof AgentsQuantumAgentRoute
  '/care-exceptions/$id': typeof CareExceptionsIdRoute
  '/genesis-findings/$month': typeof GenesisFindingsMonthRoute
  '/prds/genesis-agent': typeof PrdsGenesisAgentRoute
  '/prds/sophia-patient-engagement': typeof PrdsSophiaPatientEngagementRoute
  '/prds/surgical-plan': typeof PrdsSurgicalPlanRoute
  '/task-management/$taskId': typeof TaskManagementTaskIdRoute
  '/task-management/create': typeof TaskManagementCreateRoute
  '/task-management/create-step2': typeof TaskManagementCreateStep2Route
  '/task-management': typeof TaskManagementIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/account': typeof AccountRoute
  '/care-exceptions': typeof CareExceptionsRouteWithChildren
  '/care-plans': typeof CarePlansRoute
  '/genesis-settings': typeof GenesisSettingsRoute
  '/login': typeof LoginRoute
  '/my-plans': typeof MyPlansRoute
  '/organization': typeof OrganizationRoute
  '/patient-pool': typeof PatientPoolRoute
  '/surgical-plan-view': typeof SurgicalPlanViewRoute
  '/task-management': typeof TaskManagementRouteWithChildren
  '/team-plans': typeof TeamPlansRoute
  '/agents/compliance-agent': typeof AgentsComplianceAgentRoute
  '/agents/genesis-agent': typeof AgentsGenesisAgentRoute
  '/agents/patient-engagement': typeof AgentsPatientEngagementRoute
  '/agents/quantum-agent': typeof AgentsQuantumAgentRoute
  '/care-exceptions/$id': typeof CareExceptionsIdRoute
  '/genesis-findings/$month': typeof GenesisFindingsMonthRoute
  '/prds/genesis-agent': typeof PrdsGenesisAgentRoute
  '/prds/sophia-patient-engagement': typeof PrdsSophiaPatientEngagementRoute
  '/prds/surgical-plan': typeof PrdsSurgicalPlanRoute
  '/task-management/$taskId': typeof TaskManagementTaskIdRoute
  '/task-management/create': typeof TaskManagementCreateRoute
  '/task-management/create-step2': typeof TaskManagementCreateStep2Route
  '/task-management/': typeof TaskManagementIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/account'
    | '/care-exceptions'
    | '/care-plans'
    | '/genesis-settings'
    | '/login'
    | '/my-plans'
    | '/organization'
    | '/patient-pool'
    | '/surgical-plan-view'
    | '/task-management'
    | '/team-plans'
    | '/agents/compliance-agent'
    | '/agents/genesis-agent'
    | '/agents/patient-engagement'
    | '/agents/quantum-agent'
    | '/care-exceptions/$id'
    | '/genesis-findings/$month'
    | '/prds/genesis-agent'
    | '/prds/sophia-patient-engagement'
    | '/prds/surgical-plan'
    | '/task-management/$taskId'
    | '/task-management/create'
    | '/task-management/create-step2'
    | '/task-management/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/account'
    | '/care-exceptions'
    | '/care-plans'
    | '/genesis-settings'
    | '/login'
    | '/my-plans'
    | '/organization'
    | '/patient-pool'
    | '/surgical-plan-view'
    | '/team-plans'
    | '/agents/compliance-agent'
    | '/agents/genesis-agent'
    | '/agents/patient-engagement'
    | '/agents/quantum-agent'
    | '/care-exceptions/$id'
    | '/genesis-findings/$month'
    | '/prds/genesis-agent'
    | '/prds/sophia-patient-engagement'
    | '/prds/surgical-plan'
    | '/task-management/$taskId'
    | '/task-management/create'
    | '/task-management/create-step2'
    | '/task-management'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/account'
    | '/care-exceptions'
    | '/care-plans'
    | '/genesis-settings'
    | '/login'
    | '/my-plans'
    | '/organization'
    | '/patient-pool'
    | '/surgical-plan-view'
    | '/task-management'
    | '/team-plans'
    | '/agents/compliance-agent'
    | '/agents/genesis-agent'
    | '/agents/patient-engagement'
    | '/agents/quantum-agent'
    | '/care-exceptions/$id'
    | '/genesis-findings/$month'
    | '/prds/genesis-agent'
    | '/prds/sophia-patient-engagement'
    | '/prds/surgical-plan'
    | '/task-management/$taskId'
    | '/task-management/create'
    | '/task-management/create-step2'
    | '/task-management/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AccountRoute: typeof AccountRoute
  CareExceptionsRoute: typeof CareExceptionsRouteWithChildren
  CarePlansRoute: typeof CarePlansRoute
  GenesisSettingsRoute: typeof GenesisSettingsRoute
  LoginRoute: typeof LoginRoute
  MyPlansRoute: typeof MyPlansRoute
  OrganizationRoute: typeof OrganizationRoute
  PatientPoolRoute: typeof PatientPoolRoute
  SurgicalPlanViewRoute: typeof SurgicalPlanViewRoute
  TaskManagementRoute: typeof TaskManagementRouteWithChildren
  TeamPlansRoute: typeof TeamPlansRoute
  AgentsComplianceAgentRoute: typeof AgentsComplianceAgentRoute
  AgentsGenesisAgentRoute: typeof AgentsGenesisAgentRoute
  AgentsPatientEngagementRoute: typeof AgentsPatientEngagementRoute
  AgentsQuantumAgentRoute: typeof AgentsQuantumAgentRoute
  GenesisFindingsMonthRoute: typeof GenesisFindingsMonthRoute
  PrdsGenesisAgentRoute: typeof PrdsGenesisAgentRoute
  PrdsSophiaPatientEngagementRoute: typeof PrdsSophiaPatientEngagementRoute
  PrdsSurgicalPlanRoute: typeof PrdsSurgicalPlanRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/team-plans': {
      id: '/team-plans'
      path: '/team-plans'
      fullPath: '/team-plans'
      preLoaderRoute: typeof TeamPlansRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/task-management': {
      id: '/task-management'
      path: '/task-management'
      fullPath: '/task-management'
      preLoaderRoute: typeof TaskManagementRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/surgical-plan-view': {
      id: '/surgical-plan-view'
      path: '/surgical-plan-view'
      fullPath: '/surgical-plan-view'
      preLoaderRoute: typeof SurgicalPlanViewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/patient-pool': {
      id: '/patient-pool'
      path: '/patient-pool'
      fullPath: '/patient-pool'
      preLoaderRoute: typeof PatientPoolRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/organization': {
      id: '/organization'
      path: '/organization'
      fullPath: '/organization'
      preLoaderRoute: typeof OrganizationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/my-plans': {
      id: '/my-plans'
      path: '/my-plans'
      fullPath: '/my-plans'
      preLoaderRoute: typeof MyPlansRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/genesis-settings': {
      id: '/genesis-settings'
      path: '/genesis-settings'
      fullPath: '/genesis-settings'
      preLoaderRoute: typeof GenesisSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/care-plans': {
      id: '/care-plans'
      path: '/care-plans'
      fullPath: '/care-plans'
      preLoaderRoute: typeof CarePlansRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/care-exceptions': {
      id: '/care-exceptions'
      path: '/care-exceptions'
      fullPath: '/care-exceptions'
      preLoaderRoute: typeof CareExceptionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/task-management/': {
      id: '/task-management/'
      path: '/'
      fullPath: '/task-management/'
      preLoaderRoute: typeof TaskManagementIndexRouteImport
      parentRoute: typeof TaskManagementRoute
    }
    '/task-management/create-step2': {
      id: '/task-management/create-step2'
      path: '/create-step2'
      fullPath: '/task-management/create-step2'
      preLoaderRoute: typeof TaskManagementCreateStep2RouteImport
      parentRoute: typeof TaskManagementRoute
    }
    '/task-management/create': {
      id: '/task-management/create'
      path: '/create'
      fullPath: '/task-management/create'
      preLoaderRoute: typeof TaskManagementCreateRouteImport
      parentRoute: typeof TaskManagementRoute
    }
    '/task-management/$taskId': {
      id: '/task-management/$taskId'
      path: '/$taskId'
      fullPath: '/task-management/$taskId'
      preLoaderRoute: typeof TaskManagementTaskIdRouteImport
      parentRoute: typeof TaskManagementRoute
    }
    '/prds/surgical-plan': {
      id: '/prds/surgical-plan'
      path: '/prds/surgical-plan'
      fullPath: '/prds/surgical-plan'
      preLoaderRoute: typeof PrdsSurgicalPlanRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/prds/sophia-patient-engagement': {
      id: '/prds/sophia-patient-engagement'
      path: '/prds/sophia-patient-engagement'
      fullPath: '/prds/sophia-patient-engagement'
      preLoaderRoute: typeof PrdsSophiaPatientEngagementRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/prds/genesis-agent': {
      id: '/prds/genesis-agent'
      path: '/prds/genesis-agent'
      fullPath: '/prds/genesis-agent'
      preLoaderRoute: typeof PrdsGenesisAgentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/genesis-findings/$month': {
      id: '/genesis-findings/$month'
      path: '/genesis-findings/$month'
      fullPath: '/genesis-findings/$month'
      preLoaderRoute: typeof GenesisFindingsMonthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/care-exceptions/$id': {
      id: '/care-exceptions/$id'
      path: '/$id'
      fullPath: '/care-exceptions/$id'
      preLoaderRoute: typeof CareExceptionsIdRouteImport
      parentRoute: typeof CareExceptionsRoute
    }
    '/agents/quantum-agent': {
      id: '/agents/quantum-agent'
      path: '/agents/quantum-agent'
      fullPath: '/agents/quantum-agent'
      preLoaderRoute: typeof AgentsQuantumAgentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agents/patient-engagement': {
      id: '/agents/patient-engagement'
      path: '/agents/patient-engagement'
      fullPath: '/agents/patient-engagement'
      preLoaderRoute: typeof AgentsPatientEngagementRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agents/genesis-agent': {
      id: '/agents/genesis-agent'
      path: '/agents/genesis-agent'
      fullPath: '/agents/genesis-agent'
      preLoaderRoute: typeof AgentsGenesisAgentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agents/compliance-agent': {
      id: '/agents/compliance-agent'
      path: '/agents/compliance-agent'
      fullPath: '/agents/compliance-agent'
      preLoaderRoute: typeof AgentsComplianceAgentRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface CareExceptionsRouteChildren {
  CareExceptionsIdRoute: typeof CareExceptionsIdRoute
}

const CareExceptionsRouteChildren: CareExceptionsRouteChildren = {
  CareExceptionsIdRoute: CareExceptionsIdRoute,
}

const CareExceptionsRouteWithChildren = CareExceptionsRoute._addFileChildren(
  CareExceptionsRouteChildren,
)

interface TaskManagementRouteChildren {
  TaskManagementTaskIdRoute: typeof TaskManagementTaskIdRoute
  TaskManagementCreateRoute: typeof TaskManagementCreateRoute
  TaskManagementCreateStep2Route: typeof TaskManagementCreateStep2Route
  TaskManagementIndexRoute: typeof TaskManagementIndexRoute
}

const TaskManagementRouteChildren: TaskManagementRouteChildren = {
  TaskManagementTaskIdRoute: TaskManagementTaskIdRoute,
  TaskManagementCreateRoute: TaskManagementCreateRoute,
  TaskManagementCreateStep2Route: TaskManagementCreateStep2Route,
  TaskManagementIndexRoute: TaskManagementIndexRoute,
}

const TaskManagementRouteWithChildren = TaskManagementRoute._addFileChildren(
  TaskManagementRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AccountRoute: AccountRoute,
  CareExceptionsRoute: CareExceptionsRouteWithChildren,
  CarePlansRoute: CarePlansRoute,
  GenesisSettingsRoute: GenesisSettingsRoute,
  LoginRoute: LoginRoute,
  MyPlansRoute: MyPlansRoute,
  OrganizationRoute: OrganizationRoute,
  PatientPoolRoute: PatientPoolRoute,
  SurgicalPlanViewRoute: SurgicalPlanViewRoute,
  TaskManagementRoute: TaskManagementRouteWithChildren,
  TeamPlansRoute: TeamPlansRoute,
  AgentsComplianceAgentRoute: AgentsComplianceAgentRoute,
  AgentsGenesisAgentRoute: AgentsGenesisAgentRoute,
  AgentsPatientEngagementRoute: AgentsPatientEngagementRoute,
  AgentsQuantumAgentRoute: AgentsQuantumAgentRoute,
  GenesisFindingsMonthRoute: GenesisFindingsMonthRoute,
  PrdsGenesisAgentRoute: PrdsGenesisAgentRoute,
  PrdsSophiaPatientEngagementRoute: PrdsSophiaPatientEngagementRoute,
  PrdsSurgicalPlanRoute: PrdsSurgicalPlanRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
